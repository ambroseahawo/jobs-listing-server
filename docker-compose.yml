services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
    networks:
      - app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app
    restart: unless-stopped
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

  adminer:
    image: adminer
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - app
    ports:
      - 8080:8080

  prisma-migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    working_dir: /app
    command: [sh, -c, "npx prisma generate && npx prisma migrate deploy"]
    depends_on:
      - postgres
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_NAME: ${DB_NAME}
    volumes:
      - .:/app:delegated
    networks:
      - app
    restart: on-failure

  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    working_dir: /app
    networks:
      - app
    ports:
      - 8000:8000
    depends_on:
      - prisma-migrate
      - postgres
      - adminer
    command: [sh, -c, "npm run start:dev"]
    volumes:
      - .:/app:delegated
      - /app/node_modules
    restart: unless-stopped
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

networks:
  app:

volumes:
  postgres_data:
  redis_data:
